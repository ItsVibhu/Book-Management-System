plugins {
    id("groovy") 
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "2.0.6"
}

version = "0.1"
group = "mn.data.mysql"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("mn.data.mysql.*")
    }
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation 'io.swagger:swagger-annotations:1.6.4'
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'com.github.onsoul:springfox-swagger-ui:2.8.2'
    implementation 'io.springfox.ui:springfox-swagger-ui-rfc6570:1.0.0'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-test:2.6.2'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.6.2'
    implementation 'org.springframework.boot:spring-boot-configuration-processor:2.6.2'
    implementation 'org.mockito:mockito-core:4.2.0'
    implementation 'org.projectlombok:lombok:1.18.22'
    implementation 'javax.inject:javax.inject:1'
    implementation 'org.slf4j:slf4j-api:1.7.32'
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    runtimeOnly("ch.qos.logback:logback-classic")
    compileOnly("org.graalvm.nativeimage:svm")


    implementation("io.micronaut.flyway:micronaut-flyway")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.reactor:micronaut-reactor-http-client")

    testAnnotationProcessor "io.micronaut:micronaut-inject-java:$micronautVersion"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    testImplementation 'org.mockito:mockito-junit-jupiter:4.2.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.2.0'

    runtimeOnly("mysql:mysql-connector-java")
    testImplementation 'org.mockito:mockito-junit-jupiter:4.2.0'
    testImplementation("org.testcontainers:mysql")
    testImplementation("org.testcontainers:spock")
    testImplementation("org.testcontainers:testcontainers")

    implementation("io.micronaut:micronaut-validation")
}


application {
    mainClass.set("mn.data.mysql.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("16")
    targetCompatibility = JavaVersion.toVersion("16")
}

nativeImage {
    args('--verbose')
    imageName('mn-data-mysql')

    allprojects {
        apply plugin: 'idea'
        apply plugin: 'java'
        idea {
            module {
                downloadSources = true
            }
        }
        tasks.withType(JavaCompile) {
            options.fork = true
            options.forkOptions.jvmArgs << '-Dmicronaut.openapi.views.spec=swagger-ui.enabled=true,swagger-ui.theme=flattop'
        }
        tasks.withType(JavaCompile) {
            options.fork = true
            options.forkOptions.jvmArgs << '-Dmicronaut.openapi.property.naming.strategy=CAMEL_CASE'
        }
        tasks.withType(JavaExec) {
        }
    }
}
